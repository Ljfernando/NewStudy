user_dist[i] <- getOrthDist(df_filtered,
b0 = row$intercept[1],
b1 = row$slope[1])
}
user_dist
line_data <- cbind(line_data,
user_dist = user_sse,
actual_dist = rep(Orth_df$dist, each = 4))
error <- (line_data$user_dist - line_data$actual_dist)/line_data$actual_dist
line_data$error <- error
line_data$difficulty <- diff_long$difficulty
summary(line_data$error)
ggplot(line_data, aes(x=difficulty, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=avg-se, ymax=avg+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty")
data_sum <- summarySE(line_data, measurevar="avg", groupvars=c("difficulty"))
data_sum <- summarySE(line_data, measurevar="error", groupvars=c("difficulty"))
View(data_sum)
ggplot(data_sum, aes(x=difficulty, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=avg-se, ymax=avg+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
facet_wrap(~user)
ggplot(data_sum, aes(x=difficulty, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
facet_wrap(~user)
ggplot(data_sum, aes(x=difficulty, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty")
data_sum <- summarySE(line_data, measurevar="error", groupvars=c("question"))
ggplot(data_sum, aes(x=question, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty")
ggplot(data_sum, aes(x=question, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
coord_flip()
df <- read.csv("11.csv")
df_filtered <- df[df$class == "D",]
View(Orth_df)
ggplot(data = df_filtered) + geom_point(mapping = aes(x = x, y = y, colour = class))
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class))
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,4,150), y = -1.331 + seq(-4,4,150)*(-5.06684)))
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = -1.331 + seq(-4,2,150)*(-5.06684)))
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = -1.331 + seq(-4,2,150)*(-5.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = -1.331, colour = "red")
)
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = 0) colour = "red"))
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = 0) colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = 0), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,150), y = rep(0, 150)), colour = "red")
ggplot(data = df) +
geom_point(mapping = aes(x = x, y = y, colour = class)) +
geom_line(mapping = aes(x = seq(-4,2,150), y = rep(0, 150)), colour = "red")
seq(-4,2,150)
ggplot(data = df) +
geom_point(mapping = aes(x = x, y = y, colour = class)) +
geom_line(mapping = aes(x = seq(-4,2,length.out = 150), y = rep(0, 150)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-4,2,length.out=150), y = -1.331 + seq(-4,2,length.out=150)*(-5.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,2,length.out=150), y = -1.331 + seq(-1,2,length.out=150)*(-5.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,,length.out=150), y = -1.331 + seq(-1,1,length.out=150)*(-5.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = -1.331 + seq(-1,1,length.out=150)*(-5.06684)), colour = "red")
30390/100
30390/37
line_data <- read.csv("../../../../PreliminaryWork/line_data.csv")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = -16.15 + seq(-1,1,length.out=150)*(-1.529)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = 38 + seq(-1,1,length.out=150)*(3.77333)), colour = "red")
datasets <- rep(1:15, each = 16)
classes <- rep(c("A", "B", "C", "D"), 15, each = 4)
user_dist <- rep(0, nrow(line_data))
for(i in 1:nrow(line_data)){
row <- line_data[i, ]
df <- read.csv(paste(datasets[i], ".csv", sep = ""))
df_filtered <- df[df$class == classes[i],]
user_dist[i] <- getOrthDist(df_filtered,
b0 = row$intercept[1],
b1 = row$slope[1])
}
line_data <- cbind(line_data,
user_dist = user_sse,
actual_dist = rep(Orth_df$dist, each = 4))
error <- (line_data$user_dist - line_data$actual_dist)/line_data$actual_dist
line_data$error <- error
line_data$difficulty <- diff_long$difficulty
data_sum <- summarySE(line_data, measurevar="error", groupvars=c("question"))
ggplot(data_sum, aes(x=question, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
coord_flip()
ggplot(data = df) +
geom_point(mapping = aes(x = x, y = y, colour = class)) +
geom_line(mapping = aes(x = seq(-4,2,length.out = 150), y = rep(0, 150)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = 38 + seq(-1,1,length.out=150)*(3.77333)), colour = "red")
getwd()
df <- read.csv("11.csv")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = 7.4033874 + seq(-1,1,length.out=150)*(3.9342)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = 3.9342 + seq(-1,1,length.out=150)*(-4.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,1,length.out=150), y = 3.9342 + seq(-1,1,length.out=150)*(-5.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,2,length.out=150), y = 3.9342 + seq(-1,2,length.out=150)*(-5.06684)), colour = "red")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, colour = class)) + geom_line(mapping = aes(x = seq(-1,2,length.out=150), y = 38.2434571 + seq(-1,2,length.out=150)*(3.773333)), colour = "red")
study_data <- read.csv("../../../../PreliminaryWork/data.csv")
View(study_data)
study_data <- study_data[-c(2,3),]
study_data$postId <- c("Matthew", "Sophie", "Sherry", "Alark")
avg_resp <- cbind(user = study_data$postId,
select(study_data, ends_with("avgDist")))
diff_resp <- cbind(user = study_data$postId,
select(study_data, ends_with("diff")))
int_resp <- cbind(user = study_data$postId,
select(study_data, ends_with("intercept")))
slope_resp <- cbind(user = study_data$postId,
select(study_data, ends_with("slope")))
avg_long <- gather(data = avg_resp,
key = question,
value = avg,
-user)
diff_long <- gather(data = diff_resp,
key = question,
value = difficulty,
-user)
int_long <- gather(data = int_resp,
key = question,
value = intercept,
-user)
slope_long <- gather(data = slope_resp,
key = question,
value = slope,
-user)
line_long <- cbind(int_long, slope = slope_long$slope)
View(line_long)
df <- read.csv("../rescaled_150/11.csv")
ggplot(data = df) + geom_point(mapping =aes(x,y,class))
ggplot(data = df) + geom_point(mapping =aes(x,y,color = class))
cat(line_long$intercept[161:176], sep = ",")
0.878269 * (-2.259)
-3.114 +1.98401
-3.1142857 - (0.878269 * (-2.2592597))
ggplot(data = df) +
geom_point(mapping = aes(x = x, y = y, colour = class)) +
geom_line(mapping = aes(x = seq(-4,2,length.out = 150), y = rep(0, 150)), colour = "red")
ggplot(data_sum, aes(x=question, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
coord_flip()
getwd()
df <- read.csv("1.csv")
ggplot(data = df) + geom_point(mapping = aes(x = x, y = y, col = class))
View(line_data)
return((numerator/denominator)^2 %>% mean())
getOrthDist <- function(df, b0, b1){
# |-Ax + 1y - C| / sqrt(A^2 + 1)
numerator <- abs((-b1*df$x) + df$y - rep(b0, nrow(df)))
denominator <- sqrt((b1^2) + 1)
return((numerator/denominator)^2 %>% mean())
}
Orth_df <- data.frame(dataset = numeric(0),
class = character(0),
dist = numeric(0),
b0 = numeric(0),
b1 = numeric(0))
for(i in 1:15){
df <- read.csv(paste(i, ".csv", sep = ""))
for(j in c("A", "B", "C", "D")){
df_filtered <- df[df$class == j,]
v <- prcomp(cbind(df_filtered$x, df_filtered$y))$rotation
beta <- v[2,1]/v[1,1]
beta0 <- mean(df_filtered$y) - (beta*mean(df_filtered$x))
distance <- getOrthDist(df_filtered, beta0, beta)
# Get orthogonal distance
Orth_df <- rbind(Orth_df, data.frame(dataset = i,
class = j,
dist = distance,
b0 = beta,
b1 = beta0))
}
}
View(avg_long)
line_data <- read.csv("../../../../PreliminaryWork/line_data.csv")
datasets <- rep(1:15, each = 16)
classes <- rep(c("A", "B", "C", "D"), 15, each = 4)
user_dist <- rep(0, nrow(line_data))
for(i in 1:nrow(line_data)){
row <- line_data[i, ]
df <- read.csv(paste(datasets[i], ".csv", sep = ""))
df_filtered <- df[df$class == classes[i],]
user_dist[i] <- getOrthDist(df_filtered,
b0 = row$intercept[1],
b1 = row$slope[1])
}
line_data <- cbind(line_data,
user_dist = user_sse,
actual_dist = rep(Orth_df$dist, each = 4))
View(line_data)
line_data <- cbind(line_data,
user_dist = avg_long$avg,
actual_dist = rep(Orth_df$dist, each = 4))
line_data <- read.csv("../../../../PreliminaryWork/line_data.csv")
datasets <- rep(1:15, each = 16)
classes <- rep(c("A", "B", "C", "D"), 15, each = 4)
user_dist <- rep(0, nrow(line_data))
for(i in 1:nrow(line_data)){
row <- line_data[i, ]
df <- read.csv(paste(datasets[i], ".csv", sep = ""))
df_filtered <- df[df$class == classes[i],]
user_dist[i] <- getOrthDist(df_filtered,
b0 = row$intercept[1],
b1 = row$slope[1])
}
line_data <- cbind(line_data,
user_dist = avg_long$avg,
actual_dist = rep(Orth_df$dist, each = 4))
line_data$difficulty <- diff_long$difficulty
table(line_data$question, line_data$difficulty)
diff_table <- table(line_data$question, line_data$difficulty)
diff_table$hard_count <- apply(diff_table, MARGIN = 1,
FUN = function(row){
row[4] + row[5]
})
diff_table$hard_count
diff_table <- table(line_data$question, line_data$difficulty) %>% as.data.frame()
View(diff_table)
diff_table <- table(line_data$question, line_data$difficulty) %>% as.matrix.data.frame()
View(diff_table)
table(line_data$question, line_data$difficulty)
diff_table$hard_count <- apply(diff_table, MARGIN = 1,
FUN = function(row){
row[4] + row[5]
})
diff_table$hard_count <- sapply(diff_table, MARGIN = 1,
FUN = function(row){
row[4] + row[5]
})
diff_table$hard_count <- sapply(diff_table,
FUN = function(row){
row[4] + row[5]
})
diff_table <- table(line_data$question, line_data$difficulty) %>% as.matrix.data.frame()
diff_table$hard_count <- sapply(diff_table,
FUN = function(row){
row[4] + row[5]
})
diff_table <- table(line_data$question, line_data$difficulty) %>% as.matrix.data.frame()
sapply(diff_table,
FUN = function(row){
row[4] + row[5]
})
sapply(diff_table, FUN = function(row){
row$V4 + row$V5})
sapply(diff_table, FUN = function(row){
print(row)})
diff_table <- table(line_data$question, line_data$difficulty) %>% as.matrix.data.frame()
for(i in 1:nrow(diff_table)){
print(diff_table[i, 'V4'] + diff_table[i, 'V5'])
}
for(i in 1:nrow(diff_table)){
print(diff_table[i, 'V4'] + diff_table[i, 'V5'])
}
View(diff_table)
for(i in 1:nrow(diff_table)){
print(diff_table[i, 4] + diff_table[i, 5])
}
for(i in 1:nrow(diff_table)){
print(mean(diff_table[i,]))
}
for(i in 1:nrow(diff_table)){
print(apply(diff_table[i,], MARGIN = 2, FUN = mean()))
}
for(i in 1:nrow(diff_table)){
print(apply(X = diff_table[i,], MARGIN = 2, FUN = mean()))
}
print(apply(X = diff_table[i,], MARGIN = 2, FUN = mean()))
print(apply(X = diff_table[i,], MARGIN = 2, FUN = mean)
}
data_sum <- summarySE(line_data, measurevar="error", groupvars=c("question"))
ggplot(data_sum, aes(x=question, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
coord_flip()
for(i in 1:nrow(diff_table)){
print(apply(X = diff_table[i,], MARGIN = 2, FUN = mean))
}
for(i in 1:nrow(diff_table)){
print(apply(X = diff_table[i,], MARGIN = 1, FUN = mean))
}
?collapse
collapse(diff_table[1,])
unlist(diff_table[1,])
for(i in 1:nrow(diff_table)){
print(unlist(diff_table[i,]) %>% sum())
}
for(i in 1:nrow(diff_table)){
print(unlist(diff_table[i,]) %>% type()
}
data_sum <- summarySE(line_data, measurevar="error", groupvars=c("question"))
ggplot(data_sum, aes(x=question, y=error)) +
geom_bar(stat="identity",
colour="black", # Use black outlines,
size=.3) +      # Thinner lines
geom_errorbar(aes(ymin=error-se, ymax=error+se),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
labs(x = "Difficulty", y = "Distance From Points",
title = "Individual Accuracy By Difficulty") +
coord_flip()
for(i in 1:nrow(diff_table)){
print(unlist(diff_table[i,])) %>% type()
}
for(i in 1:nrow(diff_table)){
print(unlist(diff_table[i,])) %>% class()
}
for(i in 1:nrow(diff_table)){
print(unlist(diff_table[i,])) %>% mean()
}
for(i in 1:nrow(diff_table)){
print(unlist(diff_table[i,]) %>% mean())
}
?unlist
View(diff_table)
unlist(diff_table[1,])
View(diff_long)
View(data_sum)
study_data <- read.csv("../../../../PreliminaryWork/data.csv")
study_data <- study_data[-c(2,3),]
study_data$postId <- c("Matthew", "Sophie", "Sherry", "Alark")
View(study_data)
diff_resp <- cbind(user = study_data$postId,
select(study_data, ends_with("diff")))
diff_long <- gather(data = diff_resp,
key = question,
value = difficulty,
-user)
data_sum <- summarySE(data_long, measurevar="avg", groupvars=c("difficulty", "user"))
data_long <- cbind(avg_long, difficulty = diff_long$difficulty)
data_sum <- summarySE(data_long, measurevar="avg", groupvars=c("difficulty", "user"))
data_sum <- summarySE(data_long, measurevar="avg", groupvars=c("difficulty", "question"))
View(data_long)
data_sum <- summarySE(data_long, measurevar="difficulty", groupvars=c("question"))
View(data_sum)
data_sum$question[data_sum$difficulty > 3]
setwd("~/Desktop/Research/VGLResearch/DefaultAesthetics/NewStudy/NewStudy/analysis/results")
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_avgDist", "_intercept", "_slope", "_diff",
"_x1", "_x2", "_y1", "_y2")){
cat("pre", i, j, c, sep = "")
cat("\n")
}
}
}
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_avgDist", "_intercept", "_slope", "_diff",
"_x1", "_x2", "_y1", "_y2")){
cat("pre", i, j, k, sep = "")
cat("\n")
}
}
}
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_avgDist", "_intercept", "_slope", "_diff",
"_x1", "_x2", "_y1", "_y2")){
cat('"pre"', i, j, k, '"', sep = "")
cat("\n")
}
}
}
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_avgDist", "_intercept", "_slope", "_diff",
"_x1", "_x2", "_y1", "_y2")){
cat('"pre', i, j, k, '"', sep = "")
cat("\n")
}
}
}
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_avgDist", "_intercept", "_slope", "_diff",
"_x1", "_x2", "_y1", "_y2")){
cat('"pre', i, j, k, '",', sep = "")
cat("\n")
}
}
}
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_intercept", "_slope", "_diff",
"_x1", "_x2", "_y1", "_y2")){
cat('"pre', i, j, k, '",', sep = "")
cat("\n")
}
}
}
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
View(study_data)
study_data <- read.csv("data.csv")
View(study_data)
line_data <- read.csv("../../../../PreliminaryWork/line_data.csv")
setwd("~/Desktop/Research/VGLResearch/DefaultAesthetics/NewStudy/NewStudy/public/data/rescaled_150/")
df <- read.csv("1.csv")
ggplot(data = df) + geom_point(mapping = aes(x, y, col = class))
View(study_data)
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_intercept", "_slope", "_diff",
"_x1", "_y1", "_x2", "_y2")){
cat('"pre', i, j, k, '",', sep = "")
cat("\n")
}
}
}
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_x1", "_y1", "_x2", "_y2")){
cat('"pre', i, j, k, '",', sep = "")
cat("\n")
}
}
}
for(i in 1:15){
for(j in c("A", "B", "C", "D")){
for(k in c("_x1", "_y1", "_x2", "_y2", "_diff")){
cat('"pre', i, j, k, '",', sep = "")
cat("\n")
}
}
}
setwd("~/Desktop/Research/VGLResearch/DefaultAesthetics/NewStudy/NewStudy/analysis/results")
study_data <- read.csv("data.csv")
View(study_data)
row <- study_data[1,]
(row$pre1A_y2 - row$pre1A_y1)/(row$pre1A_x2 - row$pre1A_x1)
row <- study_data[2,]
(row$pre1A_y2 - row$pre1A_y1)/(row$pre1A_x2 - row$pre1A_x1)
