var j2c    = require('json2csv')
  , fs     = require('fs')
  , file   = process.argv[2]
  , _      = require('underscore')
  , fields = [ // EDIT THESE
      'postId',
      'timestamp',
      'comments',
      "pre1A_x1",
      "pre1A_y1",
      "pre1A_x2",
      "pre1A_y2",
      "pre1A_diff",
      "pre1B_x1",
      "pre1B_y1",
      "pre1B_x2",
      "pre1B_y2",
      "pre1B_diff",
      "pre1C_x1",
      "pre1C_y1",
      "pre1C_x2",
      "pre1C_y2",
      "pre1C_diff",
      "pre1D_x1",
      "pre1D_y1",
      "pre1D_x2",
      "pre1D_y2",
      "pre1D_diff",
      "pre2A_x1",
      "pre2A_y1",
      "pre2A_x2",
      "pre2A_y2",
      "pre2A_diff",
      "pre2B_x1",
      "pre2B_y1",
      "pre2B_x2",
      "pre2B_y2",
      "pre2B_diff",
      "pre2C_x1",
      "pre2C_y1",
      "pre2C_x2",
      "pre2C_y2",
      "pre2C_diff",
      "pre2D_x1",
      "pre2D_y1",
      "pre2D_x2",
      "pre2D_y2",
      "pre2D_diff",
      "pre3A_x1",
      "pre3A_y1",
      "pre3A_x2",
      "pre3A_y2",
      "pre3A_diff",
      "pre3B_x1",
      "pre3B_y1",
      "pre3B_x2",
      "pre3B_y2",
      "pre3B_diff",
      "pre3C_x1",
      "pre3C_y1",
      "pre3C_x2",
      "pre3C_y2",
      "pre3C_diff",
      "pre3D_x1",
      "pre3D_y1",
      "pre3D_x2",
      "pre3D_y2",
      "pre3D_diff",
      "pre4A_x1",
      "pre4A_y1",
      "pre4A_x2",
      "pre4A_y2",
      "pre4A_diff",
      "pre4B_x1",
      "pre4B_y1",
      "pre4B_x2",
      "pre4B_y2",
      "pre4B_diff",
      "pre4C_x1",
      "pre4C_y1",
      "pre4C_x2",
      "pre4C_y2",
      "pre4C_diff",
      "pre4D_x1",
      "pre4D_y1",
      "pre4D_x2",
      "pre4D_y2",
      "pre4D_diff",
      "pre5A_x1",
      "pre5A_y1",
      "pre5A_x2",
      "pre5A_y2",
      "pre5A_diff",
      "pre5B_x1",
      "pre5B_y1",
      "pre5B_x2",
      "pre5B_y2",
      "pre5B_diff",
      "pre5C_x1",
      "pre5C_y1",
      "pre5C_x2",
      "pre5C_y2",
      "pre5C_diff",
      "pre5D_x1",
      "pre5D_y1",
      "pre5D_x2",
      "pre5D_y2",
      "pre5D_diff",
      "pre6A_x1",
      "pre6A_y1",
      "pre6A_x2",
      "pre6A_y2",
      "pre6A_diff",
      "pre6B_x1",
      "pre6B_y1",
      "pre6B_x2",
      "pre6B_y2",
      "pre6B_diff",
      "pre6C_x1",
      "pre6C_y1",
      "pre6C_x2",
      "pre6C_y2",
      "pre6C_diff",
      "pre6D_x1",
      "pre6D_y1",
      "pre6D_x2",
      "pre6D_y2",
      "pre6D_diff",
      "pre7A_x1",
      "pre7A_y1",
      "pre7A_x2",
      "pre7A_y2",
      "pre7A_diff",
      "pre7B_x1",
      "pre7B_y1",
      "pre7B_x2",
      "pre7B_y2",
      "pre7B_diff",
      "pre7C_x1",
      "pre7C_y1",
      "pre7C_x2",
      "pre7C_y2",
      "pre7C_diff",
      "pre7D_x1",
      "pre7D_y1",
      "pre7D_x2",
      "pre7D_y2",
      "pre7D_diff",
      "pre8A_x1",
      "pre8A_y1",
      "pre8A_x2",
      "pre8A_y2",
      "pre8A_diff",
      "pre8B_x1",
      "pre8B_y1",
      "pre8B_x2",
      "pre8B_y2",
      "pre8B_diff",
      "pre8C_x1",
      "pre8C_y1",
      "pre8C_x2",
      "pre8C_y2",
      "pre8C_diff",
      "pre8D_x1",
      "pre8D_y1",
      "pre8D_x2",
      "pre8D_y2",
      "pre8D_diff",
      "pre9A_x1",
      "pre9A_y1",
      "pre9A_x2",
      "pre9A_y2",
      "pre9A_diff",
      "pre9B_x1",
      "pre9B_y1",
      "pre9B_x2",
      "pre9B_y2",
      "pre9B_diff",
      "pre9C_x1",
      "pre9C_y1",
      "pre9C_x2",
      "pre9C_y2",
      "pre9C_diff",
      "pre9D_x1",
      "pre9D_y1",
      "pre9D_x2",
      "pre9D_y2",
      "pre9D_diff",
      "pre10A_x1",
      "pre10A_y1",
      "pre10A_x2",
      "pre10A_y2",
      "pre10A_diff",
      "pre10B_x1",
      "pre10B_y1",
      "pre10B_x2",
      "pre10B_y2",
      "pre10B_diff",
      "pre10C_x1",
      "pre10C_y1",
      "pre10C_x2",
      "pre10C_y2",
      "pre10C_diff",
      "pre10D_x1",
      "pre10D_y1",
      "pre10D_x2",
      "pre10D_y2",
      "pre10D_diff",
      "pre11A_x1",
      "pre11A_y1",
      "pre11A_x2",
      "pre11A_y2",
      "pre11A_diff",
      "pre11B_x1",
      "pre11B_y1",
      "pre11B_x2",
      "pre11B_y2",
      "pre11B_diff",
      "pre11C_x1",
      "pre11C_y1",
      "pre11C_x2",
      "pre11C_y2",
      "pre11C_diff",
      "pre11D_x1",
      "pre11D_y1",
      "pre11D_x2",
      "pre11D_y2",
      "pre11D_diff",
      "pre12A_x1",
      "pre12A_y1",
      "pre12A_x2",
      "pre12A_y2",
      "pre12A_diff",
      "pre12B_x1",
      "pre12B_y1",
      "pre12B_x2",
      "pre12B_y2",
      "pre12B_diff",
      "pre12C_x1",
      "pre12C_y1",
      "pre12C_x2",
      "pre12C_y2",
      "pre12C_diff",
      "pre12D_x1",
      "pre12D_y1",
      "pre12D_x2",
      "pre12D_y2",
      "pre12D_diff",
      "pre13A_x1",
      "pre13A_y1",
      "pre13A_x2",
      "pre13A_y2",
      "pre13A_diff",
      "pre13B_x1",
      "pre13B_y1",
      "pre13B_x2",
      "pre13B_y2",
      "pre13B_diff",
      "pre13C_x1",
      "pre13C_y1",
      "pre13C_x2",
      "pre13C_y2",
      "pre13C_diff",
      "pre13D_x1",
      "pre13D_y1",
      "pre13D_x2",
      "pre13D_y2",
      "pre13D_diff",
      "pre14A_x1",
      "pre14A_y1",
      "pre14A_x2",
      "pre14A_y2",
      "pre14A_diff",
      "pre14B_x1",
      "pre14B_y1",
      "pre14B_x2",
      "pre14B_y2",
      "pre14B_diff",
      "pre14C_x1",
      "pre14C_y1",
      "pre14C_x2",
      "pre14C_y2",
      "pre14C_diff",
      "pre14D_x1",
      "pre14D_y1",
      "pre14D_x2",
      "pre14D_y2",
      "pre14D_diff",
      "pre15A_x1",
      "pre15A_y1",
      "pre15A_x2",
      "pre15A_y2",
      "pre15A_diff",
      "pre15B_x1",
      "pre15B_y1",
      "pre15B_x2",
      "pre15B_y2",
      "pre15B_diff",
      "pre15C_x1",
      "pre15C_y1",
      "pre15C_x2",
      "pre15C_y2",
      "pre15C_diff",
      "pre15D_x1",
      "pre15D_y1",
      "pre15D_x2",
      "pre15D_y2",
      "pre15D_diff",
    ]
  , data

// console.log(fields)
fs.readFile(file, 'utf8', function (err, data) {
  if (err) console.log(err)

  data = JSON.parse(data)

  // filters any undefined data (it makes R scripting easier)
  data = filterUndefined(data)

  // use 'debug' for your workerId when testing experiments,
  //   comment out if you want to analyze data from yourself
  data = filterDebug(data)

  convert( data )
})

function convert(d) {
  var params = {
    data: d,
    fields: fields
  }
  j2c(params, function(err, csv) {
    if (err) console.log(err)
    console.log(csv)
  })
}

function filterUndefined (arr) {
  return _.filter(arr, function(row) {
    return _.every(fields, function(f) { return row[f] })
  })
}

function filterDebug (arr) {
  return _.filter(arr, function(row) {
    return row.workerId !== 'debug'
  })
}
