#                             R01 = NA,
#                             D00 = NA,
#                             D11 = NA,
#                             D01 = NA)
#
# for(i in seq_along(combinations)){
#   Likelihood.DF[i,] <- compareSenators(sen1 = df[combinations[[i]][1],],
#                                       sen2 = df[combinations[[i]][2],],
#                                       regime = regime)
# }
Likelihood.list <- lapply(combinations, function(combo){
compareSenators(df[combo[1], ], df[combo[2],], regime)
})
Likelihood.DF <- do.call(rbind.data.frame, Likelihood.list)
# return(Likelihood.list)
return(Likelihood.DF)
}
Congress86 <- CreatePairwise(Senate.Raw.encoded[[1]], Senate.Majority[1])
Congress87 <- CreatePairwise(Senate.Raw.encoded[[2]], Senate.Majority[2])
Congress88 <- CreatePairwise(Senate.Raw.encoded[[3]], Senate.Majority[3])
rm(list=setdiff(ls(), c("Congress86", "Congress87")))
save.image("~/Desktop/Research/VotingResearch/86thAnd87thLikelihood.RData")
load("/Users/lancefernando/Desktop/Research/VotingResearch/Data/Likelihood_DFs.RData")
load("/Users/lancefernando/Desktop/Research/VotingResearch/Data/Bill_Info.RData")
rm(list = setdiff(ls(), "Bills.Info"))
View(Bills.Info)
library(ggplot2)
table(Bills.Info$codes.Clausen)
levels(Bills.Info$codes.Clausen)
Bills.Info$codes.Issue %>% unlist() %>% table()
library(magrittr)
Bills.Info$codes.Issue %>% unlist() %>% table()
Bills.Info$codes.Peltzman %>% unlist() %>% table()
Bills.Info$codes.Clausen %>% unlist() %>% table()
Bills.Info$codes.Clausen %>% unlist() %>% table() %>% as.data.frame()
Clausen <- Bills.Info$codes.Clausen %>% unlist() %>% table() %>% as.data.frame()
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = "", y = Freq, fill = "."))
ggplot(data = Clausen) +
geom_bar(mapping = aes(y = Freq, fill = "."))
ggplot(data = Clausen) +
geom_bar(mapping = aes(y = Freq, fill = "."), stat = "count")
ggplot(data = Clausen) +
geom_bar(mapping = aes(y = Freq, fill = .), stat = "count")
ggplot(data = Clausen) +
geom_bar(mapping = aes(y = Freq, fill = .), stat = count)
colnames(Clausen)
colnames(Clausen)[1] <- Type
colnames(Clausen)[1] <- "Type"
ggplot(data = Clausen) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "count")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Freq, fill = Type), stat = "count")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, fill = Type), stat = "count")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "count")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity") +
coord_polar("y", start = 0)
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity") +
coord_polar("x", start = 0)
ggplot(data = Clausen) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("x", start = 0)
ggplot(data = Clausen, mapping = aes(x"")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("x", start = 0)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("x", start = 0)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("y", start = 0)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("y", start = 0) +
theme(axis.text.x=element_blank())+
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("y", start = 0) +
theme(axis.text.x=element_blank())+
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = percent(Freq/100)), size=5)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("y", start = 0) +
theme(axis.text.x=element_blank())+
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = Freq/100), size=5)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity") +
coord_polar("y", start = 0) +
theme(axis.text.x=element_blank())+
geom_text(aes(y = Freq/3 + c(0, cumsum(Freq)[-length(Freq)]),
label = Freq/100), size=2)
cumsum(Freq)
ggplot(data = Clausen, mapping = aes(x = "")) +
geom_bar(mapping = aes(y = Freq, fill = Type), stat = "identity")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity") +
coord_cartesian()
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity") +
coord_fil()
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity") +
coord_flip()
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity") +
coord_flip() +
labs(x = "Bill Type", y = "Frequency")
ggplot(data = Clausen) +
geom_bar(mapping = aes(x = Type, y = Freq, fill = Type), stat = "identity",
show.legend = FALSE) +
coord_flip() +
labs(x = "Bill Type", y = "Frequency")
ggplot(data = Bills.Info) +
geom_bar(mapping = aes(x = Type, fill = Type), stat = "count")
ggplot(data = Bills.Info) +
geom_bar(mapping = aes(x = codes.Clausen, fill = codes.Clausen), stat = "count")
ggplot(data = Bills.Info) +
geom_bar(mapping = aes(x = codes.Clausen %>% unlist(), fill = codes.Clausen %>% unlist), stat = "count")
ggplot(data = Bills.Info) +
geom_bar(mapping = aes(x = codes.Clausen %>% unlist(), fill = codes.Clausen %>% unlist()), stat = "count")
ggplot(data = Bills.Info) +
geom_bar(mapping = aes(x = codes.Clausen %>% unlist()), stat = "count")
ggplot() +
geom_bar(mapping = aes(x = codes.Clausen %>% unlist()), stat = "count")
ggplot() +
geom_bar(mapping = aes(x = Bills.Info$codes.Clausen %>% unlist()), stat = "count")
ggplot() +
geom_bar(mapping = aes(x = Bills.Info$codes.Clausen %>% unlist(),
fill = Bills.Info$codes.Clausen %>% unlist()), stat = "count")
ggplot() +
geom_bar(mapping = aes(x = Bills.Info$codes.Clausen %>% unlist(),
fill = Bills.Info$codes.Clausen %>% unlist()), stat = "count",
show.legend = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
Clausen
Clausen <- Bills.Info$codes.Clausen
levels(Clausen)
length(Clausen[[1]])
length(Clausen[[4]])
for(i in seq_along(Clausen)){
if(length(Clausen[[i]] > 1))
print(i)
}
for(i in seq_along(Clausen)){
if(length(Clausen[[i]] > 1))
print(Clausen[[i]])
}
Clausen %>% as.vector()
length(length(Clausen )> 0 )
length(Clausen)
count <- 1
for(i in seq_along(Clausen)){
if(length(Clausen[[i]] > 1))
count <- count + 1
}
print(count)
for(i in seq_along(Clausen)){
if(length(Clausen[[i]] < 1))
print(Clausen[[i]])
}
for(i in seq_along(Clausen)){
if(!length(Clausen[[i]] > 1))
print(Clausen[[i]])
}
C <- Clausen %>% unlist()
c
C
Bills.Info$codes.Clausen <- C
C[20490:21151] <- NA
Bills.Info$codes.Clausen <- C
View(Bills.Info)
ggplot(Bills.Info) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
C[20490:21151] <- NULL
C <- Clausen %>% unlist()
C[20490:21151] <- NULL
C[20490:21151] <-rep(NULL, 21151-20490)
ggplot(Bills.Info[]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = TRUE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
ggplot(Bills.Info[]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
C[20490:21151] <- rep(NA, 21151 - 20490)
C[20490:21151] <- rep(NA, 21151 - 20489)
Bills.Info$codes.Clausen <- C
ggplot(Bills.Info[]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
ggplot(Bills.Info[Bills.Info$congress < 114]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
ggplot(Bills.Info[Bills.Info$congress < 114,]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
Pelzman <- Bills.Info$codes.Peltzman
levels(Pelzman)
P <- Pelzman %>% paste()
levels(P)
unique(P)
P <- sapply(Pelzman, length())
P <- sapply(Pelzman, length
P <- sapply(Pelzman, length
)
P <- sapply(Pelzman, length)
P
P <- sapply(Pelzman, function(val){
if(length(val)>1){
return(paste(val[[1]], val[[2]], ", "))
}
return(val[[1]])
})
P
P <- sapply(Pelzman, function(val){
if(length(val)>1){
return(paste(val[[1]], val[[2]], ", "))
}
return(val[[1]])
}) %>% unlist()
P
P <- sapply(Pelzman, function(val){
if(length(val)>1){
return(paste(val[[1]], val[[2]], "--"))
}
return(val[[1]])
}) %>% unlist()
P[6]
P <- sapply(Pelzman, function(val){
return(length(val))
})
P <- sapply(Pelzman, function(val){
if(length(val)>1){
return(paste(val[[1]], val[[2]], sep =", "))
}
return(val[[1]])
}) %>% unlist()
P
P[5]
P[6]
levels(P)
unique(P)
Claus.copy <- Clausen %>% unlist()
Claus.copy[20490:21151] <- rep(NA, 21151 - 20489)
Bills.Info$codes.Clausen <- Claus.copy
ggplot(Bills.Info[Bills.Info$congress < 114,]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
levels(Claus.copy)
unique(Claus.copy)
Claus.copy
Claus.copy %>% as.factor() %>% levels()
Claus.copy <- Clausen %>% unlist() %>% as.factor()
Claus.copy[20490:21151] <- rep(NA, 21151 - 20489)
Bills.Info$codes.Clausen <- Claus.copy
ggplot(Bills.Info[Bills.Info$congress < 114,]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
levels(Claus.copy)
Claus.copy <- Clausen %>% unlist() %>% as.factor()
Claus.copy[20490:21151] <- rep(NA, 21151 - 20489)
levels(Claus.copy)
Bills.Info$codes.Clausen <- Claus.copy
ggplot(Bills.Info[Bills.Info$congress < 114,]) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
levels(Bills.Info$codes.Clausen)
ggplot(na.omit(Bills.Info[Bills.Info$congress < 114,])) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE,
na.rm = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
ggplot(na.omit(Bills.Info[Bills.Info$congress < 114,])) +
geom_bar(mapping = aes(x = codes.Clausen,
fill = codes.Clausen), stat = "count",
show.legend = FALSE) +
labs(x = "Bill Type", y = "Frequency") +
coord_flip()
set.seed(4)
xA <- rnorm(100, 3, 1.25)
yA <- rnorm(100, 2, 1.25)
xB <- rnorm(100, 2, 1)
yB <- rnorm(100, 4, 1)
xC <- rnorm(100, 4, .75)
yC <- rnorm(100, 2, .75)
xD <- rnorm(100, 3, 1)
yD <- rnorm(100, 3, 1)
x <- c(xA, xB, xC, xD)
y <- c(yA, yB, yC, yD)
class <- c(rep("A", 100),
rep("B", 100),
rep("C", 100),
rep("D", 100))
sctplot.df <- data.frame(x = x, y = y, class = class)
ggplot(data = sctplot.df) +
geom_point(mapping = aes(x = x,
y = y,
colour = class))
library(ggplot2)
set.seed(4)
xA <- rnorm(100, 3, 1.25)
yA <- rnorm(100, 2, 1.25)
xB <- rnorm(100, 2, 1)
yB <- rnorm(100, 4, 1)
xC <- rnorm(100, 4, .75)
yC <- rnorm(100, 2, .75)
xD <- rnorm(100, 3, 1)
yD <- rnorm(100, 3, 1)
x <- c(xA, xB, xC, xD)
y <- c(yA, yB, yC, yD)
class <- c(rep("A", 100),
rep("B", 100),
rep("C", 100),
rep("D", 100))
sctplot.df <- data.frame(x = x, y = y, class = class)
ggplot(data = sctplot.df) +
geom_point(mapping = aes(x = x,
y = y,
colour = class))
View(sctplot.df)
summary(sctplot$y)
summary(sctplot.df$y)
setwd(dir = "Desktop/Research/VGLResearch/DefaultAesthetics/Data/GeneratedPlotData/NewData/")
library(ggplot2)
library(dplyr)
library(magrittr)
ggplot(data = read.csv("easy_small_1.csv"))
ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = X, y = Y))
df <- read.csv("easy_small_1.csv")
View(df)
ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y))
ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, fill = class))
ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, fill = as.factor(class)))
ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)))
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
vis1 <- ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis1
visualizations <- []
visualizations <- rep(NULL, 5)
for (i in 1:5){
visualizations[i] <- ggplot(data = read.csv("easy_small_" + as.character(i) + ".csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
}
as.character()
as.character(1)
?cat
visualizations[i] <- ggplot(data = read.csv(cat("easy_small_" + as.character(i) + ".csv"), sep = "")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
visualizations[i] <- ggplot(data = read.csv(cat("easy_small_", as.character(i), ".csv"), sep = "")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
visualizations[i] <- ggplot(data = read.csv(cat("easy_small_", as.character(i), ".csv", sep = "")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
}
for (i in 1:5){
visualizations[i] <- ggplot(data = read.csv(cat("easy_small_", as.character(i), ".csv", sep = "")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
}
visualizations[i] <- ggplot(data = read.csv(cat("easy_small_", as.character(i), ".csv", sep = ""))) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
visualizations[i] <- ggplot(data = read.csv(paste("easy_small_", as.character(i), ".csv", sep = ""))) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
print(paste("easy_small_", as.character(i), ".csv", sep = ""))
for (i in 1:5){
print(paste("easy_small_", as.character(i), ".csv", sep = ""))
visualizations[i] <- ggplot(data = read.csv(paste("easy_small_", as.character(i), ".csv", sep = ""))) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
}
visualizations[1]
multiplot(visualizations[1], visualizations[2],
visualizations[3], visualizations[4],
visualizations[5])
visualizations[i] <- ggplot(data = read.csv(paste("easy_small_", as.character(i), ".csv", sep = ""))) +geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
for (i in 1:5){
print(paste("easy_small_", as.character(i), ".csv", sep = ""))
visualizations[i] <- ggplot(data = read.csv(paste("easy_small_", as.character(i), ".csv", sep = ""))) +geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
}
for (i in 1:5){
print(paste("easy_small_", as.character(i), ".csv", sep = ""))
visualizations[i] <- ggplot(data = read.csv(paste("easy_small_", as.character(i), ".csv", sep = ""))) +geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
}
multiplot(visualizations[1], visualizations[2],
visualizations[3], visualizations[4],
visualizations[5])
vis1 <- ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis1 <- ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis2 <- ggplot(data = read.csv("easy_small_2.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis3 <- ggplot(data = read.csv("easy_small_3.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis4 <- ggplot(data = read.csv("easy_small_4.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis5 <- ggplot(data = read.csv("easy_small_5.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
multiplot(vis1, vis2, vis3, vis4, vis5)
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 5)
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 5, layout = matrix(nrow = 2, ncol = 3))
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 5, layout = matrix(1:5, nrow = 2, ncol = 3))
multiplot(vis1, vis2, vis3, vis4, vis5, layout = matrix(1:5, nrow = 2, ncol = 3))
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 3)
vis1
vis2
vis3
vis4
vis1
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 3)
vis1 <- ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis2 <- ggplot(data = read.csv("easy_small_2.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis3 <- ggplot(data = read.csv("easy_small_3.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis4 <- ggplot(data = read.csv("easy_small_4.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis5 <- ggplot(data = read.csv("easy_small_5.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 3)
vis1 <- ggplot(data = read.csv("easy_small_1.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis2 <- ggplot(data = read.csv("easy_small_2.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis3 <- ggplot(data = read.csv("easy_small_3.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis4 <- ggplot(data = read.csv("easy_small_4.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
vis5 <- ggplot(data = read.csv("easy_small_5.csv")) +
geom_point(mapping = aes(x = x, y = y, colour = as.factor(class)), show.legend = FALSE)
multiplot(vis1, vis2, vis3, vis4, vis5, cols = 3)
